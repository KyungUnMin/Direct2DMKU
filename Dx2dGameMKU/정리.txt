
	
	트랜스폼 이동 쿠드, 노말 다시 한번 확인해보자
	//w가 0인 곱하기
	float4 TransformNormal(const float4& _Value)

	//w가 1인 곱하기
	float4 TransformCoord(const float4& _Value)

	샘플러는 쉐이어 파일이 컴파일 되기 전에 꼭 먼저 만들어 주어야 한다


	블렌드 공식을 알아보면 알파값들에 구멍이 뚫리는 이유를 알 수 있다.
	알파값이라고 해서 색상을 그리지 않는 것이 아니다
	블렌드 공식에 따라 뒷 색상으로 그리는 것이다.
	이 과정에서 깊이 버퍼값도 같이 바뀌게 된다

	------------------------------------------------

	GameEngineTransform::SetParent가 변경되면서
	앞으로는 Render같은 자식들의 위치를 정하고 난 이후에
	부모인 Actor가 이동해도 자식의 위치가 변하지 않는다
		부모 먼저 이동시키고 Render를 생성시켜도
		렌더는 원점에 위치한다

	------------------------------------------------


	------------------------------------------------


	박스 이미지 두개 필요해
	박스 위치 기준 맨 뒤, 맨 앞

	자르는 방식
	맨 뒤는 전체(위치를 또 박스 맨 뒤로)
	맨 앞은 앞면과 오른쪽 면
		

	------------------------------------------------

	마우스는 윈도우 좌표계다
	UI는 월드 좌표계다
	모든 물체는 
	월드좌표(크자이공부) -> 뷰 -> 프로젝션 -> 뷰포트 과정을 통해 윈도우 좌표계로 변환된다.

	그러니 버튼의 위치를 윈도우 좌표로 변환하여 충돌체크 한다
	이 개념 나중에 그림자를 만들때도 사용된다

	--

	랜파 과정에서 뷰포트가 카메라의 GetViewPort를 사용하는지 확인해보자



