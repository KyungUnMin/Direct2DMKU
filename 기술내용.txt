몬스터 이동 A* (☆)
	A*시 느려지는 공간
몬스터의 겹침 문제 (☆)
Z버퍼 사용 이유

FSM구조 (☆)
FSM 복제를 위한 툴(이를 이용해 한마리당 n개의 State를 가진 몬스터들을 m개 만들어낼 수 있었다) (☆)



이벤트 영역 접근 시 카메라 고정 -> 카메라의 FSM 소개 에너미스포너
	모든 몬스터들은 EnemySpawner클래스를 통해 생성된다.
	플레이어가 필드의 모든 몬스터들을 다 제거하면
	사전에 등록된 함수포인터가 호출된다.
	SchoolEntry스테이지에서는 닫혀있던 문이 열리고,
	각 보스스테이지에서는 다음 스테이지로 전환되는 UI가 생성된다.

레벨업시 옵저버 패턴
NPC대화시 시간이 정지되는 기능
	매 프레임 델타타임을 만들어내는 클래스(GameEngineTime)가 존재한다.
	일반적인 객체들은 메인 GameEngineTime이 만들어낸 델타타임을 인자로 받아 Update가 실행되는데,
	플레이어가 NPC와 대화를 시작하면 메인 GameEngineTime의 타임 스케일은 0이 되고,
	NPC와 대화 UI만 다른 GameEngineTime가 만들어내는 델타타임으로 Update가 실행된다.

스킬 상점에서 플레이어 재활용 (☆)
	필드의 플레이어를 상속받아 재활용하고 키입력만 막아두었다.

보스 UI에 사용된 쉐이더
	픽셀 쉐이더에서 노이즈 값을 만들고
	상수버퍼로 들어온 값보다 노이즈 값이 낮다면 해당 픽셀을 출력하지 않는 방식으로 만듦

오프닝 영상 DirectShow 라이브러리 사용, (☆)
	게임 시작시 나오는 오프닝에서는 사용했지만,
	랜더링 파이프라인이 시작되고 난 이후에는, 동영상의 소리만 나오고 영상은 나오지 않았다.
	그래서 보스 컷신에서는 스프라이트 애니메이션을 이용해 컷신을 만들었다.
사운드 라이브러리로 Fmod를 선택한 이유
	WinAPI의 PlaySound는 다양한 사운드 확장자를 지원하지 않는다.
	WinAPI의 PlaySound는 Fmod만큼 다양한 기능들이 지원되지 않는다.(피치, 사운드 크기, 사운드 정지 등)
	Wwise보다 사용하기 쉽다. Wwise는 좀 더 전문적인 라이브러리로 판단했다.






